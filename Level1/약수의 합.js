/* 
문제 설명
정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, 
solution을 완성해주세요.

제한 사항
n은 0 이상 3000이하인 정수입니다.
입출력 예
n	return
12	28 (1 + 2 + 3 + 4 + 6 + 12 = 28)
5	  6  (1 + 5 = 6)

입출력 예 설명))) 
입출력 예 #1
12의 약수는 1, 2, 3, 4, 6, 12입니다. 
이를 모두 더하면 28입니다.

입출력 예 #2
5의 약수는 1, 5입니다. 이를 모두 더하면 6입니다.

*/



function solution(n) {
  var answer = 0;
  for(var i = 0; i<=n; i++){
    if(n%i===0){  // 반복문을 돌며 n을 i의 값으로 나누어서 나머지가 0이 되면 약수가 된다.
     // arr1.push(i);  해당 약수를 배열에 담는다.
      answer+=i;
    }
  }
  // console.log(arr1);  
  /*
  answer = arr1.reduce((acc, cur)=>{  
     return acc+cur;
  },0);
  */

  return answer;
}

console.log(solution(12));  //1,2,3,4,6,12 => 28


/* 
1. 처음엔 배열 생성 후에 그 배열에 약수를 push하고 reduce메서드를 사용해서 합하는식으로 코드를 짰다. 
하지만 이렇게 했을떄는 배열생성하면 메모리를 더 잡아먹게 되고 메서드를 한번 더 사용해야해서 시간을 더 소비하게 된다.

2. 그래서 다음 풀이로 약수를 구해서 answer에 바로 더하는 식으로 짰다. 

*/ 